[{"C:\\Users\\DELL\\Desktop\\contact\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\contact\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Contact.js":"3","C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Form.js":"4","C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Navbar.js":"5"},{"size":234,"mtime":1612782212867,"results":"6","hashOfConfig":"7"},{"size":3008,"mtime":1613227237391,"results":"8","hashOfConfig":"7"},{"size":5476,"mtime":1613227228476,"results":"9","hashOfConfig":"7"},{"size":3363,"mtime":1612950792694,"results":"10","hashOfConfig":"7"},{"size":550,"mtime":1613227234238,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6cf9d3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"C:\\Users\\DELL\\Desktop\\contact\\src\\index.js",[],["26","27"],"C:\\Users\\DELL\\Desktop\\contact\\src\\App.js",["28"],"import React from 'react';\nimport Contact from './Components/Contact';\nimport Form from './Components/Form';\nimport Navbar from './Components/Navbar';\n//import sweetalert\nimport swal from 'sweetalert';\n// code got from reacttostify \nimport { ToastContainer, toast } from 'react-toastify';\nimport uuid from 'uuid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nclass App extends React.Component{\n  state={\n    contact:[\n      {id:1,name:'Ram',phone:98432355,email:\"ram@gmail.com\"},\n      {id:2,name:\"Shayam\",phone:797826,email:\"shayam@gmail.com\"},\n      {id:3,name:\"Hari\",phone:9739447, email:\"hari@gmail.com\"},\n      {id:4,name:\"Sonam\",phone:937384,email:\"sonam@gamil.com\"},\n      {id:5,name:\"Pratima\",phone:83753893,email:\"pratima@gmail.com\"}\n    ] \n    // showHide:false\n\n  };\n  handleClick=()=>{\n    this.setState({showHide:!this.state.showHide});\n    // console.log(\"called\");\n\n  };\n  handleDelete=id=>{\n    console.log(id);\n    let filterData=this.state.contact.filter(function(contact){\n      return contact.id !==id;\n    });\n    // yo line le delete garni kam garcha\n    // this.setState({contact:filterData});\n\n    //below code take form the sweetalert\n    swal({\n      title: \"Are you sure?\",\n      text: \"Are you sure that you want to delete this contact?\",\n      icon: \"warning\",\n      dangerMode: true,\n    })\n    .then(willDelete => {\n      if (willDelete) {\n        this.setState({contact:filterData});\n        swal(\"Deleted!\", \"Contact file has been deleted!\", \"success\");\n        toast.success(\"Successsfully Delelted!!!!\");\n\n      }\n    });\n  };\n  handleSubmittedData=formData=>{\n    // console.log(formData);\n    // console.log(\"parent called\");\n    let id=this.state.contact.length+1;\n    let insertData={id,...formData};\n    console.log(insertData);\n    this.setState({contact:[insertData,...this.state.contact]});\n    toast.success(\"Data Inserted Successfully!!!\");\n\n\n  };\n  handleEditData=(editData)=>{\n    // console.log(editData);\n    let editContact=this.state.contact.map(function(contact){\n      if(editData.id===contact.id){\n        return editData;\n      }\n      \n        return contact;\n      \n    });\n    // console.log(\"edit contact \")\n    this.setState({contact:editContact});\n    toast.success(\"Contact Edited Sucessfully\");\n\n  };\n  render(){\n    // console.log(this.state.showHide);\n   \n   \n    console.log(this.state.contact);\n    for(let i=0;i<this.state.contact;i++){\n      console.log(this.state.contact[i]);\n    }\n    return(\n      // <h1>this is appjs compoent</h1>\n      <div>\n                \n{/* <button type=\"button\" onClick={this.handleClick}>Show</button> */}\n        <Navbar title=\"Contact Management System\"/>\n        <Form formData={this.handleSubmittedData}/>\n        {this.state.contact.map((contact)=>(\n        <Contact contact={contact} delete={this.handleDelete} key={contact.id} edit={this.handleEditData}/>))}\n        \n        \n        <ToastContainer />\n      </div>\n    );\n  }\n}\nexport default App;","C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Contact.js",[],"C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Form.js",[],"C:\\Users\\DELL\\Desktop\\contact\\src\\Components\\Navbar.js",["29","30"],"import React from 'react';\r\nclass Navbar extends React.Component{\r\n    render(){\r\n        console.log(this.props);\r\n        return(\r\n            // <h1>this is Navbar</h1>\r\n\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\" style={{backgroundColor:'blue',color:'white'}}>\r\n             \r\n                <a className=\"navbar-brand\" href=\"#\" style={{color:'white',textAlign:\"center\",fontSize:\"bold\",marginLeft:550,fontSize:40}}>{this.props.title}</a>\r\n                \r\n            </nav>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":9,"column":8,"nodeType":"39","messageId":"40","endLine":9,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":10,"column":17,"nodeType":"43","endLine":10,"endColumn":140},{"ruleId":"44","severity":1,"message":"45","line":10,"column":126,"nodeType":"46","messageId":"47","endLine":10,"endColumn":134},{"ruleId":"33","replacedBy":"48"},{"ruleId":"35","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","unexpected",["50"],["51"],"no-global-assign","no-unsafe-negation"]